# Вы работаете над внутрикорпоративной системой управления задачами. Реализуйте класс TaskManager, который будет поддерживать методы для добавления новой задачи, удаления задачи, изменения статуса задачи и получения списка всех задач. У задачи может быть два статуса: «‎Выполнен» или «‎Не выполнен».
# Класс TaskManager должен поддерживать следующие методы:
# add_task() — добавляет новую задачу;
# remove_task() — удаляет задачу;
# complete_task() — делает статус задачи выполненным;
# get_tasks() — вернет список всех задач со статусами.
# Формат ввода
# Несколько строк, состоящих из команд add_task, remove_task, complete_task, get_tasks. Входные данные гарантировано завершаются командой get_tasks.
# Формат вывода
# Несколько строк, в которой будет список всех текущих задач с актуальным статусом. Если задач нет, выводится «Нет задач».
# Пример 1
# Входные данные:
# add_task НаписатьКод
# add_task ТестироватьКод
# complete_task НаписатьКод
# get_tasks
# Выходные данные:
# НаписатьКод: Выполнен
# ТестироватьКод: Не выполнен
# Пример 2
# Входные данные:
# remove_task ПосетитьВстречу
# remove_task ПосетитьВстречу
# get_tasks
# Выходные данные:
# Нет задач
# Пример 3
# Входные данные:
# add_task ПоставитьЧайник
# add_task ВыпитьЧай
# complete_task ПоставитьЧайник
# get_tasks
# Выходные данные:
# ПоставитьЧайник: Выполнен
# ВыпитьЧай: Не выполнен

class TaskManager:
    def __init__(self):
        self.tasks = {}

    def add_task(self, task_name):
        """Ваш код"""

    def remove_task(self, task_name):
        """Ваш код"""

    def complete_task(self, task_name):
        """Ваш код"""

    def get_tasks(self):
        """Ваш код"""


manager = TaskManager()
input_string = []
while True:
   try:
       line = input()
       if line == "":
           break
   except EOFError:
       break
   input_string.append(line)

for line in input_string:
    """Ваш код"""
